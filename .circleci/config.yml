version: 2.1
workflows:
  version: 2
  build_and_test:
    jobs:
      - build_app
      - test_app
      - build_home
jobs:
  build_app:
    working_directory: ~/rss_temple_http/
    docker:
      - image: circleci/node:14
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "~/rss_temple_http/rss-temple/yarn.lock" }}
      - run:
          name: install-dependencies
          command: yarn install --frozen-lockfile
          working_directory: ~/rss_temple_http/rss-temple/
      - save_cache:
          key: dependency-cache-{{ checksum "~/rss_temple_http/rss-temple/yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: create-environment
          command: |
            cat \<< EOF > environment.ts
            import { IEnvironment } from '@environments/ienvironment';

            export const environment: IEnvironment = {
              production: true,
              apiHost: 'http://localhost:8000',
              googleApiClientId: '',
              facebookAppId: '',
              onboardingYoutubeEmbededUrl: '',
              issueTrackerUrl: 'https://github.com/murrple-1/rss_temple_http/issues',
              clientRepoUrl: 'https://github.com/murrple-1/rss_temple_http',
              serverRepoUrl: 'https://github.com/murrple-1/rss_temple',
            };
            EOF
          working_directory: ~/rss_temple_http/rss-temple/src/environments/
      - run:
          name: setup-prod-environment
          command: |
            yarn generate-licenses-file
            cd src/environments/
            sed -i "s/googleApiClientId: '',/googleApiClientId: '$GOOGLE_API_CLIENT_ID',/g" environment.prod.ts
            sed -i "s/facebookAppId: '',/facebookAppId: '$FACEBOOK_APP_ID',/g" environment.prod.ts
            sed -i "s@onboardingYoutubeEmbededUrl: '',@onboardingYoutubeEmbededUrl: '$ONBOARDING_YOUTUBE_EMBEDED_URL',@g" environment.prod.ts
          working_directory: ~/rss_temple_http/rss-temple/
      - run:
          name: angular-build
          command: yarn run ng build --configuration=production --progress=false
          working_directory: ~/rss_temple_http/rss-temple/
      - run:
          name: tarball
          command: tar -czf ../build_app.tar.gz *
          working_directory: ~/rss_temple_http/rss-temple/dist/
      - store_artifacts:
          path: ~/rss_temple_http/rss-temple/build_app.tar.gz
  test_app:
    working_directory: ~/rss_temple_http/
    docker:
      - image: circleci/node:14-browsers
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "~/rss_temple_http/rss-temple/yarn.lock" }}
      - run:
          name: install-dependencies
          command: yarn install --frozen-lockfile
          working_directory: ~/rss_temple_http/rss-temple/
      - save_cache:
          key: dependency-cache-{{ checksum "~/rss_temple_http/rss-temple/yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: create-environment
          command: |
            cat \<< EOF > environment.ts
            import { IEnvironment } from '@environments/ienvironment';

            export const environment: IEnvironment = {
              production: true,
              apiHost: 'http://localhost:8000',
              googleApiClientId: '',
              facebookAppId: '',
              onboardingYoutubeEmbededUrl: '',
              issueTrackerUrl: 'https://github.com/murrple-1/rss_temple_http/issues',
              clientRepoUrl: 'https://github.com/murrple-1/rss_temple_http',
              serverRepoUrl: 'https://github.com/murrple-1/rss_temple',
            };
            EOF
          working_directory: ~/rss_temple_http/rss-temple/src/environments/
      - run:
          name: setup-test-environment
          command: |
            yarn generate-licenses-file
          working_directory: ~/rss_temple_http/rss-temple/
      - run:
          name: angular-test
          command: yarn run cross-env TEST_TYPE=xml ng test --code-coverage --no-watch --no-progress
          working_directory: ~/rss_temple_http/rss-temple/
      - store_test_results:
          path: ~/rss_temple_http/rss-temple/test-results/
      - store_artifacts:
          path: ~/rss_temple_http/rss-temple/test-results/
      - run:
          name: codecov
          command: yarn run codecov --disable=gcov
          working_directory: ~/rss_temple_http/rss-temple/
  build_home:
    working_directory: ~/rss_temple_http/
    docker:
      - image: circleci/node:14
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "~/rss_temple_http/rss-temple-home/yarn.lock" }}
      - run:
          name: install-dependencies
          command: yarn install --frozen-lockfile
          working_directory: ~/rss_temple_http/rss-temple-home/
      - save_cache:
          key: dependency-cache-{{ checksum "~/rss_temple_http/rss-temple-home/yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: build
          command: yarn run grunt build --app-url="$APP_URL" --twitter-url="$TWITTER_URL" --fb-url="$FACEBOOK_URL" --insta-url="$INSTAGRAM_URL"
          working_directory: ~/rss_temple_http/rss-temple-home/
      - run:
          name: tarball
          command: tar -czf ../build_home.tar.gz *
          working_directory: ~/rss_temple_http/rss-temple-home/dist/
      - store_artifacts:
          path: ~/rss_temple_http/rss-temple-home/build_home.tar.gz
